/*
 * DialogSerienbrief.java
 *
 * Created on 17. August 2007, 20:50
 *
 *    Emma, Vereinsverwaltungsprorgamm
 *    Copyright (C) 2007
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the GNU General Public License as published by
 *    the Free Software Foundation, either version 3 of the License, or
 *    any later version.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    GNU General Public License for more details.
 *
 *    You should have received a copy of the GNU General Public License
 *    along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

package mosaik.gui;

import java.awt.event.*;
import java.io.File;
import javax.swing.JOptionPane;
import mosaik.BeobDatei;
import mosaik.Fehler;
import mosaik.daten.Daten;
import mosaik.daten.DatenProjekt;
import mosaik.daten.Konstanten;

/**
 *
 * @author  emil
 */
public class DialogProjektNeu extends javax.swing.JDialog {

    Daten daten;
    public boolean ok = false;

    /**
     * 
     * @param parent
     * @param modal
     * @param d
     */
    public DialogProjektNeu(java.awt.Frame parent, boolean modal, Daten d) {
        super(parent, modal);
        initComponents();
        this.setTitle("Neues Projekt anlegen");
        daten = d;
        jButtonAbbrechen.addActionListener(new AbbrechenBeobachter());
        jButtonOk.addActionListener(new OkBeobachter());
        jButtonPfadProjekt.addActionListener(new BeobDatei(daten, jTextFieldPfadProjekt, false));
        jTextFieldName.setText("Standard");
        jTextFieldPfadProjekt.setText(daten.getBasisVerzeichnis() + ".standard");
        }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jButtonOk = new javax.swing.JButton();
        jButtonAbbrechen = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldPfadProjekt = new javax.swing.JTextField();
        jButtonPfadProjekt = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldName = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jRadioButtonJpg = new javax.swing.JRadioButton();
        jRadioButtonPng = new javax.swing.JRadioButton();
        jSpinnerGroesse = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jButtonOk.setText("Projekt öffnen");

        jButtonAbbrechen.setText("Abbrechen");

        jPanel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel5.setText("Pfad:");

        jButtonPfadProjekt.setText(":::");

        jLabel1.setText("Projektname:");

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel4.setText("Breite und Höhe der Einzelbilder [Pixel] :");

        buttonGroup1.add(jRadioButtonJpg);
        jRadioButtonJpg.setSelected(true);
        jRadioButtonJpg.setText("Archivbilder als jpg erzeugen");

        buttonGroup1.add(jRadioButtonPng);
        jRadioButtonPng.setText("Archivbilder als png erzeugen");

        jSpinnerGroesse.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(75), Integer.valueOf(10), null, Integer.valueOf(1)));

        jLabel2.setText("Einstellungen Archiv:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinnerGroesse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jRadioButtonJpg)
                    .addComponent(jRadioButtonPng)
                    .addComponent(jLabel2))
                .addContainerGap(105, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jSpinnerGroesse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButtonJpg)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButtonPng)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldName, javax.swing.GroupLayout.DEFAULT_SIZE, 286, Short.MAX_VALUE)
                            .addComponent(jTextFieldPfadProjekt, javax.swing.GroupLayout.DEFAULT_SIZE, 286, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonPfadProjekt)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonPfadProjekt)
                    .addComponent(jTextFieldPfadProjekt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButtonPfadProjekt, jTextFieldName, jTextFieldPfadProjekt});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButtonOk)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonAbbrechen)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButtonAbbrechen, jButtonOk});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAbbrechen)
                    .addComponent(jButtonOk))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButtonAbbrechen;
    private javax.swing.JButton jButtonOk;
    private javax.swing.JButton jButtonPfadProjekt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioButtonJpg;
    private javax.swing.JRadioButton jRadioButtonPng;
    private javax.swing.JSpinner jSpinnerGroesse;
    private javax.swing.JTextField jTextFieldName;
    private javax.swing.JTextField jTextFieldPfadProjekt;
    // End of variables declaration//GEN-END:variables
    private void check() {
        try {
            String proj = jTextFieldPfadProjekt.getText();
            if (!proj.endsWith(File.separator)) {
                proj += File.separator;
            }
            proj += "." + jTextFieldName.getText() + "." + Konstanten.KONST_PROJEKTDATEI_SUFIX;
            File projFile = new File(proj);
            if (projFile.exists()) {
                if (JOptionPane.showConfirmDialog(null, "Trotzdem anlegen und \u00fcberschreiben?",
                                                  "Datei existiert bereits!", JOptionPane.YES_NO_OPTION) == JOptionPane.OK_OPTION) {
                    anlegen(projFile, proj);
                }
            } else {
                anlegen(projFile, proj);
            }
        } catch (Exception e) {
         daten.fehler.fehlermeldung(e, "Kann Datenbank nicht anlegen!");
        }
        if (!ok) {
           daten.fehler.fehlermeldung("Kann Datenbank nicht anlegen!");
        }
    }

    private void anlegen(File file, String stringPfad) throws Exception {
        if (!jTextFieldName.getText().equals("")) {
            if (new File(jTextFieldPfadProjekt.getText()).isDirectory() ||
                new File(jTextFieldPfadProjekt.getText()).mkdirs()) {
                daten.datenProjekt = new DatenProjekt();
                daten.listeFarben.clear();
                daten.datenProjekt.arr[Konstanten.PROJEKT_NAME_NR] = jTextFieldName.getText();
                daten.system[Konstanten.SYSTEM_PROJECT_NAME_NR] = jTextFieldName.getText();
                daten.system[Konstanten.SYSTEM_PROJECTDATEI_PFAD_NR] = stringPfad;
                if (jRadioButtonJpg.isSelected()) {
                    daten.datenProjekt.arr[Konstanten.PROJEKT_ARCHIV_FORMAT_NR] = Konstanten.IMAGE_FORMAT_JPG;
                } else {
                    daten.datenProjekt.arr[Konstanten.PROJEKT_ARCHIV_FORMAT_NR] = Konstanten.IMAGE_FORMAT_PNG;
                }
                daten.datenProjekt.arr[Konstanten.PROJEKT_AUFLOESUNG_ZIEL_NR] = String.valueOf((Integer) jSpinnerGroesse.getModel().getValue());
                if (file.exists()) {
                    ok = true;
                    daten.setGeaendert();
                } else if (file.createNewFile()) {
                    ok = true;
                    daten.setGeaendert();
                }
            }
        }
    }

    private void beenden() {
        this.dispose();

    }

    class OkBeobachter implements ActionListener {

        public void actionPerformed(ActionEvent e) {
            check();
            beenden();
        }

    }

    class AbbrechenBeobachter implements ActionListener {

        public void actionPerformed(ActionEvent e) {
            ok = false;
            beenden();
        }

    }

}
